[data-theme='dark'] {
	._local {
		--disable_opacity: 0.72;
	}
}

._local {
	--disable_opacity: 0.3;

	height: calc(100% - 72px);
	padding: 0 36px;

	.scroll_wrap {
		overflow-y: scroll;
		outline: none;
	}

	:global {
		.table_wrap {
			scrollbar-color: unset;

			thead {
				tr {
					th {
						&:nth-of-type(2) {
							padding-left: 3px !important;
						}

						&:last-child {
							padding-right: 0 !important;
						}
					}
				}
			}

			tbody {
				tr {
					td {
						&:first-child {
							padding-left: 0 !important;
							padding-right: 0 !important;
						}

						&:nth-of-type(2) {
							padding-left: 3px !important;
						}

						&:last-child {
							padding-right: 0 !important;
						}
					}
				}
			}
		}
	}
}

.archive {
	color: var(--color_text_light);
	pointer-events: none;

	.RenderText {
		color: var(--color_text_light);
	}

	.RenderTags,
	.RenderLevel,
	.RenderSchedule,
	.RenderChildren,
	.RenderRemark {
		opacity: var(--disable_opacity);
	}

	.DateTime {
		:global {
			.if-picker-input {
				input {
					color: var(--color_text_light);
				}
			}
		}
	}

	.RenderChildren {
		color: var(--color_text_light);
	}
}

.done {
	.RenderStatus {
		opacity: var(--disable_opacity);

		&:hover {
			opacity: 1;
		}
	}

	.RenderText,
	.RenderTags,
	.RenderLevel,
	.DateTime,
	.RenderCycle,
	.RenderSchedule,
	.RenderChildren,
	.RenderRemark,
	.RenderCreateAt {
		color: var(--color_text_light);
		pointer-events: none;
		opacity: var(--disable_opacity);
	}

	.DateTime {
		:global {
			.if-picker-input {
				input {
					color: var(--color_text_light);
				}
			}
		}
	}
}

.linked {
	.RenderStatus {
		color: var(--color_relation_group);
		border-radius: 50%;
	}

	.DateTime,
	.RenderCycle,
	.RenderSchedule {
		color: var(--color_text_light);
		pointer-events: none;
		opacity: var(--disable_opacity);
	}
}

.RenderStatus {
	border-radius: var(--radius_small);

	&:hover {
		background-color: var(--color_bg_2);
	}
}

.RenderText {
	padding: 0;
	border: none;
	outline: none;
	font-size: 12px;
	text-overflow: ellipsis;
	background-color: transparent;
}

.DateTime {
	:global {
		.if-picker-input {
			input {
				text-align: center;
			}
		}
	}
}

.RenderArchive {
	line-height: 1;

	:global {
		.btn_active {
			width: 21px;
			height: 21px;
			border-radius: var(--radius_small);
			color: var(--color_text);

			&:hover {
				background-color: var(--color_bg_2);
			}
		}

		.icon_doing {
			color: var(--color_text_light);
		}

		.archive_time {
			white-space: nowrap;
		}
	}
}

.RenderChildren {
	&.no_children {
		color: var(--color_text_light);
	}

	:global {
		.progress {
			.if-progress-steps-outer {
				.if-progress-steps-item {
					width: 3px !important;
					height: 9px !important;
					border-radius: 3px;
					background-color: var(--color_bg_2);

					&.if-progress-steps-item-active {
						background-color: var(--color_main);
					}
				}
			}
		}
	}
}

.RenderRemark {
	&.has_value {
		:global {
			.btn_remark {
				color: var(--color_text);
			}
		}
	}

	:global {
		.btn_remark {
			width: 21px;
			height: 21px;
			border-radius: var(--radius_small);
			color: var(--color_text_light);

			&:hover {
				background-color: var(--color_bg_2);
			}
		}
	}
}

.RenderRemarkPopover {
	:global {
		.if-popover-inner {
			width: 300px;
			height: 150px;
			padding: 18px;
			overflow-y: scroll;
		}
	}
}

.RenderCreateAt {
	color: var(--color_text_light);
	white-space: nowrap;
}

.RenderOptions {
	:global {
		.btn_action {
			width: 21px;
			height: 21px;
			border-radius: var(--radius_small);

			&:hover {
				background-color: var(--color_bg_2);
			}
		}
	}
}
